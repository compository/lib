{"version":3,"file":"membrane-context-provider.js","sourceRoot":"","sources":["../src/membrane-context-provider.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAkB,MAAM,aAAa,CAAC;AAC9E,OAAO,EAAE,aAAa,EAAE,MAAM,qBAAqB,CAAC;AAIpD,MAAM,OAAO,uBAAwB,SAAQ,aAAa,CAAC,UAAU,CAAC;IACpE,MAAM,KAAK,OAAO;QAChB,OAAO,CAAC,iBAAiB,CAAC,CAAC;IAC7B,CAAC;IAYD,OAAO,CAAC,aAA6B;QACnC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;QAE7B,IACE,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC;YAC3B,aAAa,CAAC,GAAG,CAAC,cAAc,CAAC;YACjC,aAAa,CAAC,GAAG,CAAC,gBAAgB,CAAC,EACnC;YACA,IAAI,CAAC,eAAe,GAAG;gBACrB,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,YAAY,EAAE,IAAI,CAAC,YAAY;gBAC/B,cAAc,EAAE,IAAI,CAAC,cAAc;aACpC,CAAC;SACH;IACH,CAAC;IAED,MAAM,KAAK,MAAM;QACf,OAAO,GAAG,CAAA;;;;KAIT,CAAC;IACJ,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAA,eAAe,CAAC;IAC7B,CAAC;CACF;AApCC;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;gEACO;AAGlC;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;uDACV;AAEhB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;6DACC;AAE5B;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;+DACK","sourcesContent":["import { css, html, LitElement, property, PropertyValues } from 'lit-element';\nimport { ProviderMixin } from 'lit-element-context';\nimport { AdminWebsocket, AppWebsocket, CellId } from '@holochain/conductor-api';\nimport { MembraneContext } from './with-membrane-context';\n\nexport class MembraneContextProvider extends ProviderMixin(LitElement) {\n  static get provide() {\n    return ['membraneContext'];\n  }\n\n  @property({ type: Object })\n  membraneContext!: MembraneContext;\n\n  @property({ type: Array })\n  cellId!: CellId;\n  @property({ type: Object })\n  appWebsocket!: AppWebsocket;\n  @property({ type: Object })\n  adminWebsocket!: AdminWebsocket;\n\n  updated(changedValues: PropertyValues) {\n    super.updated(changedValues);\n\n    if (\n      changedValues.has('cellId') ||\n      changedValues.has('appWebsocket') ||\n      changedValues.has('adminWebsocket')\n    ) {\n      this.membraneContext = {\n        cellId: this.cellId,\n        appWebsocket: this.appWebsocket,\n        adminWebsocket: this.adminWebsocket,\n      };\n    }\n  }\n\n  static get styles() {\n    return css`\n      :host {\n        display: contents;\n      }\n    `;\n  }\n\n  render() {\n    return html`<slot></slot>`;\n  }\n}\n"]}