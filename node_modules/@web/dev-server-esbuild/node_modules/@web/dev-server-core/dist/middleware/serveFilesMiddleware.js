"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.serveFilesMiddleware = void 0;
const path_1 = __importDefault(require("path"));
const koa_send_1 = __importDefault(require("koa-send"));
const koa_static_1 = __importDefault(require("koa-static"));
const OUTSIDE_ROOT_KEY = '/__wds-outside-root__/';
function serveFilesMiddleware(rootDir) {
    const koaStaticOptions = {
        hidden: true,
        defer: true,
        brotli: false,
        gzip: false,
        setHeaders(res) {
            res.setHeader('cache-control', 'no-cache');
        },
    };
    // the wds-root-dir parameter indicates using a different root directory as a path relative
    // from the regular root dir or as an absolute path
    const serveCustomRootDirMiddleware = async (ctx, next) => {
        if (ctx.path.startsWith(OUTSIDE_ROOT_KEY)) {
            const [, , depthString] = ctx.path.split('/');
            const depth = Number(depthString);
            if (depth == null || Number.isNaN(depth)) {
                throw new Error(`Invalid wds-root-dir path: ${ctx.path}`);
            }
            ctx.path = ctx.path.replace(`${OUTSIDE_ROOT_KEY}${depth}`, '');
            const localRootDir = path_1.default.resolve(rootDir, `..${path_1.default.sep}`.repeat(depth));
            await koa_send_1.default(ctx, ctx.path, Object.assign(Object.assign({}, koaStaticOptions), { root: localRootDir }));
            return;
        }
        return next();
    };
    // serve static files from the regular root dir
    return [serveCustomRootDirMiddleware, koa_static_1.default(rootDir, koaStaticOptions)];
}
exports.serveFilesMiddleware = serveFilesMiddleware;
//# sourceMappingURL=serveFilesMiddleware.js.map